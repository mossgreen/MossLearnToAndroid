package com.example.surfaceanimation;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.view.MotionEvent;
import android.view.SurfaceHolder;
import android.view.SurfaceView;
import android.view.View;
import android.view.View.OnTouchListener;

public class AnimationView extends SurfaceView implements Runnable, SurfaceHolder.Callback, OnTouchListener{
	
	private float startX;
	private float startY;
	private float finalX;
	private float finalY;
	private double tantheta;
	
	int degree = 0;
	int x;
	int y;
	final Paint paint = new Paint();
	private static final int HALF_WIDTH = 80;
	Thread animation = null;
	private boolean running ;
	
	public AnimationView(Context context){
		super(context);
		
		getHolder().addCallback(this);
	}
	
	public void surfaceChanged(SurfaceHolder holder, int format,
			int width, int height) {
		
		
	}
	@Override
	public boolean onTouch(View arg0, MotionEvent arg1) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public void surfaceChanged(SurfaceHolder arg0, int arg1, int arg2, int arg3) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void surfaceCreated(SurfaceHolder holder) {
		animation = new Thread(this);
		running = true;
		
		setOnTouchListener(this );
		x = holder.getSurfaceFrame().right/2;
		y = holder.getSurfaceFrame().bottom/2;
		animation.start(); //start a new thread to handle this activities animation
	}

	@Override
	public void surfaceDestroyed(SurfaceHolder arg0) {
		running = false;
		if(animation != null){
			try{
				animation.join();
			}catch(InterruptedException e){
				e.printStackTrace();
			}
		}
	}

	@Override
	public void run() {
		paint.setAntiAlias(true);
		while(running){
			Canvas canvas = null;
			SurfaceHolder  holder = getHolder();
			synchronized (holder) {
				canvas = holder.lockCanvas();
				canvas.drawColor(Color.BLACK);
				
				paint.setColor(Color.RED);
				canvas.rotate((float)tantheta, x, y);
				canvas.drawRect(x-HALF_WIDTH,   y - HALF_WIDTH, x+HALF_WIDTH, y+HALF_WIDTH, paint);
				degree ++;
			}
			
			try{
				Thread.sleep(10);
			}catch(InterruptedException e){
				e.printStackTrace();
			}
			
			holder.unlockCanvasAndPost(canvas);
		}
	}
	
	

}
