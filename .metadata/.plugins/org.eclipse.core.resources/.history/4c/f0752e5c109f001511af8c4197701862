package com.example.assignment01;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.util.AttributeSet;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnTouchListener; 

public class PaintView extends View implements OnTouchListener{
	 Paint m_penPaint;
	Bitmap offScreenBitmap;
	Canvas offScreenCanvas;
	
	float x;
	float y;

	// define additional constructors so that PaintView will work with out layout file
	public PaintView(Context context) {
		super(context);
		
		setup();
	}

	public PaintView(Context context, AttributeSet attrs, int defStyleAttr) {
		super(context, attrs, defStyleAttr);
		
		setup();
	}

	public PaintView(Context context, AttributeSet attrs) {
		super(context, attrs);
		
		setup();
	}

	public void setup()
	{
		m_penPaint = new Paint();
		
		
		
		m_penPaint.setAntiAlias(true);  
		m_penPaint.setDither(true);  
		m_penPaint.setColor(penColor);  
		m_penPaint.setStrokeWidth(penSize);  
		m_penPaint.setStyle(Paint.Style.STROKE);  
		m_penPaint.setStrokeJoin(Paint.Join.ROUND);  
		m_penPaint.setStrokeCap(Paint.Cap.ROUND);  
		setOnTouchListener(this); // define event listener and start intercepting events 
	}

	@Override
	protected void onDraw(Canvas canvas) {
		super.onDraw(canvas);
		
		paint.setColor(Color.RED);
		canvas.drawCircle(x, y, 50, paint);
		
		//draw the off screen bitmap
		canvas.drawBitmap(offScreenBitmap, 0, 0,paint);
	}
	
	

	@Override
	public boolean onTouch(View v, MotionEvent event) {

		// get the x,y coordinates of the MotionEvent.ACTION_MOVE event
		switch (event.getAction()) {
		
			case MotionEvent.ACTION_DOWN:
				x = event.getX();
				y = event.getY();
				break;
				
			case MotionEvent.ACTION_UP:
				x = event.getX();
				y = event.getY();
				break;
				
			case MotionEvent.ACTION_MOVE:
				x = event.getX();
				y = event.getY();
				break;

		}	
		invalidate(); //// force a screen re-draw
		return true; //return true to consume event from the event queue
	}
	
	@Override
	protected void onSizeChanged(int w, int h, int oldw, int oldh) {
		super.onSizeChanged(w, h, oldw, oldh);
		
		//create & re-create t he off screen bitmap to capture the state of our drawing 
		// this operation will reset the user's drawing
		
		offScreenBitmap = Bitmap.createBitmap(w,h,Bitmap.Config.ARGB_8888);
		offScreenCanvas = new Canvas(offScreenBitmap);
	}
}
